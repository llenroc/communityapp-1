//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace TechReady
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace TechReady.TechReady_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TechReady.TechReady_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TechReady.TechReady_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[62];
            _typeNameTable[0] = "TechReady.Helpers.ValueConverters.AudienceTypeToImageConverter";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "TechReady.Helpers.ValueConverters.EventTypeToImageConverter";
            _typeNameTable[3] = "TechReady.Helpers.ValueConverters.BoolToVisibilityConverter";
            _typeNameTable[4] = "TechReady.Helpers.ValueConverters.BoolToInverseVisibilityConverter";
            _typeNameTable[5] = "TechReady.Helpers.ValueConverters.TimespanToTimeInfoConverter";
            _typeNameTable[6] = "TechReady.Helpers.ValueConverters.UTCTimeToLocalTimeConverter";
            _typeNameTable[7] = "TechReady.Helpers.ValueConverters.LearningResourceThumbnailImageConverter";
            _typeNameTable[8] = "Windows.UI.Text.FontWeight";
            _typeNameTable[9] = "System.ValueType";
            _typeNameTable[10] = "TechReady.UserControls.EmailInfoMessage";
            _typeNameTable[11] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[12] = "TechReady.Views.BrowseEventsPage";
            _typeNameTable[13] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[14] = "TechReady.Common.NavigationHelper";
            _typeNameTable[15] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[16] = "TechReady.Common.ObservableDictionary";
            _typeNameTable[17] = "String";
            _typeNameTable[18] = "Coding4Fun.Toolkit.Controls.SuperImage";
            _typeNameTable[19] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[20] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[21] = "Windows.UI.Xaml.Media.Stretch";
            _typeNameTable[22] = "System.Collections.ObjectModel.ObservableCollection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>";
            _typeNameTable[23] = "System.Collections.ObjectModel.Collection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>";
            _typeNameTable[24] = "Coding4Fun.Toolkit.Controls.SuperImageSource";
            _typeNameTable[25] = "Int32";
            _typeNameTable[26] = "Boolean";
            _typeNameTable[27] = "Double";
            _typeNameTable[28] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[29] = "TechReady.Views.EventDetailsPage";
            _typeNameTable[30] = "TechReady.ViewModels.EventDetailsPageViewModel";
            _typeNameTable[31] = "TechReady.ViewModels.BaseViewModel";
            _typeNameTable[32] = "TechReady.Views.FeedbackPage";
            _typeNameTable[33] = "TechReady.Views.LearnPage";
            _typeNameTable[34] = "TechReady.Views.EventsFilterdPage";
            _typeNameTable[35] = "TechReady.Views.FilterEventsPage";
            _typeNameTable[36] = "TechReady.Views.FilterLearningResourcesPage";
            _typeNameTable[37] = "TechReady.Views.FilterSpeakersPage";
            _typeNameTable[38] = "TechReady.Views.FollowedEvents";
            _typeNameTable[39] = "TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector";
            _typeNameTable[40] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[41] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[42] = "TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector";
            _typeNameTable[43] = "TechReady.Views.HubPage";
            _typeNameTable[44] = "TechReady.ViewModels.HubPageViewModel";
            _typeNameTable[45] = "TechReady.Views.LearningResourcesFilteredPage";
            _typeNameTable[46] = "TechReady.Views.LoginPage";
            _typeNameTable[47] = "TechReady.ViewModels.LoginPageViewModel";
            _typeNameTable[48] = "TechReady.Views.MessageContentDialog";
            _typeNameTable[49] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[50] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[51] = "TechReady.Views.PrivacyPolicyPage";
            _typeNameTable[52] = "TechReady.Views.SessionDetailsPage";
            _typeNameTable[53] = "TechReady.Views.SettingsPage";
            _typeNameTable[54] = "TechReady.ViewModels.SettingsPageViewModel";
            _typeNameTable[55] = "TechReady.Views.ShowNotification";
            _typeNameTable[56] = "TechReady.Views.SpeakerDetailsPage";
            _typeNameTable[57] = "TechReady.Views.WatchedVideosListPage";
            _typeNameTable[58] = "TechReady.Views.SpeakersListPage";
            _typeNameTable[59] = "TechReady.Views.EventRegistrationPage";
            _typeNameTable[60] = "TechReady.Views.AboutUsPage";
            _typeNameTable[61] = "TechReady.Views.UserRegisterationPage";

            _typeTable = new global::System.Type[62];
            _typeTable[0] = typeof(global::TechReady.Helpers.ValueConverters.AudienceTypeToImageConverter);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::TechReady.Helpers.ValueConverters.EventTypeToImageConverter);
            _typeTable[3] = typeof(global::TechReady.Helpers.ValueConverters.BoolToVisibilityConverter);
            _typeTable[4] = typeof(global::TechReady.Helpers.ValueConverters.BoolToInverseVisibilityConverter);
            _typeTable[5] = typeof(global::TechReady.Helpers.ValueConverters.TimespanToTimeInfoConverter);
            _typeTable[6] = typeof(global::TechReady.Helpers.ValueConverters.UTCTimeToLocalTimeConverter);
            _typeTable[7] = typeof(global::TechReady.Helpers.ValueConverters.LearningResourceThumbnailImageConverter);
            _typeTable[8] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[9] = typeof(global::System.ValueType);
            _typeTable[10] = typeof(global::TechReady.UserControls.EmailInfoMessage);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[12] = typeof(global::TechReady.Views.BrowseEventsPage);
            _typeTable[13] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[14] = typeof(global::TechReady.Common.NavigationHelper);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[16] = typeof(global::TechReady.Common.ObservableDictionary);
            _typeTable[17] = typeof(global::System.String);
            _typeTable[18] = typeof(global::Coding4Fun.Toolkit.Controls.SuperImage);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Media.Stretch);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.Collection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>);
            _typeTable[24] = typeof(global::Coding4Fun.Toolkit.Controls.SuperImageSource);
            _typeTable[25] = typeof(global::System.Int32);
            _typeTable[26] = typeof(global::System.Boolean);
            _typeTable[27] = typeof(global::System.Double);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[29] = typeof(global::TechReady.Views.EventDetailsPage);
            _typeTable[30] = typeof(global::TechReady.ViewModels.EventDetailsPageViewModel);
            _typeTable[31] = typeof(global::TechReady.ViewModels.BaseViewModel);
            _typeTable[32] = typeof(global::TechReady.Views.FeedbackPage);
            _typeTable[33] = typeof(global::TechReady.Views.LearnPage);
            _typeTable[34] = typeof(global::TechReady.Views.EventsFilterdPage);
            _typeTable[35] = typeof(global::TechReady.Views.FilterEventsPage);
            _typeTable[36] = typeof(global::TechReady.Views.FilterLearningResourcesPage);
            _typeTable[37] = typeof(global::TechReady.Views.FilterSpeakersPage);
            _typeTable[38] = typeof(global::TechReady.Views.FollowedEvents);
            _typeTable[39] = typeof(global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[42] = typeof(global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector);
            _typeTable[43] = typeof(global::TechReady.Views.HubPage);
            _typeTable[44] = typeof(global::TechReady.ViewModels.HubPageViewModel);
            _typeTable[45] = typeof(global::TechReady.Views.LearningResourcesFilteredPage);
            _typeTable[46] = typeof(global::TechReady.Views.LoginPage);
            _typeTable[47] = typeof(global::TechReady.ViewModels.LoginPageViewModel);
            _typeTable[48] = typeof(global::TechReady.Views.MessageContentDialog);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[50] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[51] = typeof(global::TechReady.Views.PrivacyPolicyPage);
            _typeTable[52] = typeof(global::TechReady.Views.SessionDetailsPage);
            _typeTable[53] = typeof(global::TechReady.Views.SettingsPage);
            _typeTable[54] = typeof(global::TechReady.ViewModels.SettingsPageViewModel);
            _typeTable[55] = typeof(global::TechReady.Views.ShowNotification);
            _typeTable[56] = typeof(global::TechReady.Views.SpeakerDetailsPage);
            _typeTable[57] = typeof(global::TechReady.Views.WatchedVideosListPage);
            _typeTable[58] = typeof(global::TechReady.Views.SpeakersListPage);
            _typeTable[59] = typeof(global::TechReady.Views.EventRegistrationPage);
            _typeTable[60] = typeof(global::TechReady.Views.AboutUsPage);
            _typeTable[61] = typeof(global::TechReady.Views.UserRegisterationPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AudienceTypeToImageConverter() { return new global::TechReady.Helpers.ValueConverters.AudienceTypeToImageConverter(); }
        private object Activate_2_EventTypeToImageConverter() { return new global::TechReady.Helpers.ValueConverters.EventTypeToImageConverter(); }
        private object Activate_3_BoolToVisibilityConverter() { return new global::TechReady.Helpers.ValueConverters.BoolToVisibilityConverter(); }
        private object Activate_4_BoolToInverseVisibilityConverter() { return new global::TechReady.Helpers.ValueConverters.BoolToInverseVisibilityConverter(); }
        private object Activate_5_TimespanToTimeInfoConverter() { return new global::TechReady.Helpers.ValueConverters.TimespanToTimeInfoConverter(); }
        private object Activate_6_UTCTimeToLocalTimeConverter() { return new global::TechReady.Helpers.ValueConverters.UTCTimeToLocalTimeConverter(); }
        private object Activate_7_LearningResourceThumbnailImageConverter() { return new global::TechReady.Helpers.ValueConverters.LearningResourceThumbnailImageConverter(); }
        private object Activate_10_EmailInfoMessage() { return new global::TechReady.UserControls.EmailInfoMessage(); }
        private object Activate_12_BrowseEventsPage() { return new global::TechReady.Views.BrowseEventsPage(); }
        private object Activate_16_ObservableDictionary() { return new global::TechReady.Common.ObservableDictionary(); }
        private object Activate_18_SuperImage() { return new global::Coding4Fun.Toolkit.Controls.SuperImage(); }
        private object Activate_22_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>(); }
        private object Activate_23_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>(); }
        private object Activate_24_SuperImageSource() { return new global::Coding4Fun.Toolkit.Controls.SuperImageSource(); }
        private object Activate_29_EventDetailsPage() { return new global::TechReady.Views.EventDetailsPage(); }
        private object Activate_30_EventDetailsPageViewModel() { return new global::TechReady.ViewModels.EventDetailsPageViewModel(); }
        private object Activate_31_BaseViewModel() { return new global::TechReady.ViewModels.BaseViewModel(); }
        private object Activate_32_FeedbackPage() { return new global::TechReady.Views.FeedbackPage(); }
        private object Activate_33_LearnPage() { return new global::TechReady.Views.LearnPage(); }
        private object Activate_34_EventsFilterdPage() { return new global::TechReady.Views.EventsFilterdPage(); }
        private object Activate_35_FilterEventsPage() { return new global::TechReady.Views.FilterEventsPage(); }
        private object Activate_36_FilterLearningResourcesPage() { return new global::TechReady.Views.FilterLearningResourcesPage(); }
        private object Activate_37_FilterSpeakersPage() { return new global::TechReady.Views.FilterSpeakersPage(); }
        private object Activate_38_FollowedEvents() { return new global::TechReady.Views.FollowedEvents(); }
        private object Activate_39_EventResultItemTemplateSelector() { return new global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector(); }
        private object Activate_42_LearningResourceResultItemTemplateSelector() { return new global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector(); }
        private object Activate_43_HubPage() { return new global::TechReady.Views.HubPage(); }
        private object Activate_44_HubPageViewModel() { return new global::TechReady.ViewModels.HubPageViewModel(); }
        private object Activate_45_LearningResourcesFilteredPage() { return new global::TechReady.Views.LearningResourcesFilteredPage(); }
        private object Activate_46_LoginPage() { return new global::TechReady.Views.LoginPage(); }
        private object Activate_47_LoginPageViewModel() { return new global::TechReady.ViewModels.LoginPageViewModel(); }
        private object Activate_51_PrivacyPolicyPage() { return new global::TechReady.Views.PrivacyPolicyPage(); }
        private object Activate_52_SessionDetailsPage() { return new global::TechReady.Views.SessionDetailsPage(); }
        private object Activate_53_SettingsPage() { return new global::TechReady.Views.SettingsPage(); }
        private object Activate_54_SettingsPageViewModel() { return new global::TechReady.ViewModels.SettingsPageViewModel(); }
        private object Activate_55_ShowNotification() { return new global::TechReady.Views.ShowNotification(); }
        private object Activate_56_SpeakerDetailsPage() { return new global::TechReady.Views.SpeakerDetailsPage(); }
        private object Activate_57_WatchedVideosListPage() { return new global::TechReady.Views.WatchedVideosListPage(); }
        private object Activate_58_SpeakersListPage() { return new global::TechReady.Views.SpeakersListPage(); }
        private object Activate_59_EventRegistrationPage() { return new global::TechReady.Views.EventRegistrationPage(); }
        private object Activate_60_AboutUsPage() { return new global::TechReady.Views.AboutUsPage(); }
        private object Activate_61_UserRegisterationPage() { return new global::TechReady.Views.UserRegisterationPage(); }
        private void MapAdd_16_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_22_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>)instance;
            var newItem = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>)instance;
            var newItem = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::TechReady.TechReady_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  TechReady.Helpers.ValueConverters.AudienceTypeToImageConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_AudienceTypeToImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  TechReady.Helpers.ValueConverters.EventTypeToImageConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_EventTypeToImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  TechReady.Helpers.ValueConverters.BoolToVisibilityConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_BoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  TechReady.Helpers.ValueConverters.BoolToInverseVisibilityConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_BoolToInverseVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  TechReady.Helpers.ValueConverters.TimespanToTimeInfoConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_TimespanToTimeInfoConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  TechReady.Helpers.ValueConverters.UTCTimeToLocalTimeConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_UTCTimeToLocalTimeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  TechReady.Helpers.ValueConverters.LearningResourceThumbnailImageConverter
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_LearningResourceThumbnailImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Text.FontWeight
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 9:   //  System.ValueType
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 10:   //  TechReady.UserControls.EmailInfoMessage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_10_EmailInfoMessage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  TechReady.Views.BrowseEventsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_BrowseEventsPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  TechReady.Common.NavigationHelper
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  TechReady.Common.ObservableDictionary
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_16_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  String
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Coding4Fun.Toolkit.Controls.SuperImage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_18_SuperImage;
                userType.AddMemberName("PlaceholderImageSource");
                userType.AddMemberName("Source");
                userType.AddMemberName("Stretch");
                userType.AddMemberName("PlaceholderImageStretch");
                userType.AddMemberName("Sources");
                userType.AddMemberName("PlaceholderOpacity");
                userType.AddMemberName("PlaceholderBackground");
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.Media.Stretch
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  System.Collections.ObjectModel.ObservableCollection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>"));
                userType.CollectionAdd = VectorAdd_22_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.Collection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_Collection;
                userType.CollectionAdd = VectorAdd_23_Collection;
                xamlType = userType;
                break;

            case 24:   //  Coding4Fun.Toolkit.Controls.SuperImageSource
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_24_SuperImageSource;
                userType.AddMemberName("MinScale");
                userType.AddMemberName("MaxScale");
                userType.AddMemberName("Source");
                userType.AddMemberName("IsDefault");
                xamlType = userType;
                break;

            case 25:   //  Int32
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Boolean
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Double
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  TechReady.Views.EventDetailsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_EventDetailsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  TechReady.ViewModels.EventDetailsPageViewModel
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TechReady.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  TechReady.ViewModels.BaseViewModel
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_31_BaseViewModel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  TechReady.Views.FeedbackPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_FeedbackPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  TechReady.Views.LearnPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_LearnPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  TechReady.Views.EventsFilterdPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_EventsFilterdPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  TechReady.Views.FilterEventsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_FilterEventsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  TechReady.Views.FilterLearningResourcesPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_FilterLearningResourcesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  TechReady.Views.FilterSpeakersPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_FilterSpeakersPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  TechReady.Views.FollowedEvents
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_FollowedEvents;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.DataTemplateSelector"));
                userType.Activator = Activate_39_EventResultItemTemplateSelector;
                userType.AddMemberName("SmallItemTemplate");
                userType.AddMemberName("SmallLoadMoreTemplate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.DataTemplateSelector"));
                userType.Activator = Activate_42_LearningResourceResultItemTemplateSelector;
                userType.AddMemberName("SmallItemTemplate");
                userType.AddMemberName("SmallLoadMoreTemplate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  TechReady.Views.HubPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_HubPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  TechReady.ViewModels.HubPageViewModel
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TechReady.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  TechReady.Views.LearningResourcesFilteredPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_LearningResourcesFilteredPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  TechReady.Views.LoginPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_LoginPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  TechReady.ViewModels.LoginPageViewModel
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TechReady.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  TechReady.Views.MessageContentDialog
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  TechReady.Views.PrivacyPolicyPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_PrivacyPolicyPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  TechReady.Views.SessionDetailsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_SessionDetailsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  TechReady.Views.SettingsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  TechReady.ViewModels.SettingsPageViewModel
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TechReady.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  TechReady.Views.ShowNotification
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_55_ShowNotification;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  TechReady.Views.SpeakerDetailsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_56_SpeakerDetailsPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("PivotSelectedIndex");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  TechReady.Views.WatchedVideosListPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_57_WatchedVideosListPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  TechReady.Views.SpeakersListPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_58_SpeakersListPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  TechReady.Views.EventRegistrationPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_59_EventRegistrationPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  TechReady.Views.AboutUsPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_60_AboutUsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  TechReady.Views.UserRegisterationPage
                userType = new global::TechReady.TechReady_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_61_UserRegisterationPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Coding4Fun.Toolkit.Controls.Coding4Fun_Toolkit_Controls__WP81__XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_BrowseEventsPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.BrowseEventsPage)instance;
            return that.NavigationHelper;
        }
        private object get_1_BrowseEventsPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.BrowseEventsPage)instance;
            return that.DefaultViewModel;
        }
        private object get_2_SuperImage_PlaceholderImageSource(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.PlaceholderImageSource;
        }
        private void set_2_SuperImage_PlaceholderImageSource(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.PlaceholderImageSource = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_3_SuperImage_Source(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.Source;
        }
        private void set_3_SuperImage_Source(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.Source = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_4_SuperImage_Stretch(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.Stretch;
        }
        private void set_4_SuperImage_Stretch(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.Stretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_5_SuperImage_PlaceholderImageStretch(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.PlaceholderImageStretch;
        }
        private void set_5_SuperImage_PlaceholderImageStretch(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.PlaceholderImageStretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_6_SuperImage_Sources(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.Sources;
        }
        private void set_6_SuperImage_Sources(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.Sources = (global::System.Collections.ObjectModel.ObservableCollection<global::Coding4Fun.Toolkit.Controls.SuperImageSource>)Value;
        }
        private object get_7_SuperImageSource_MinScale(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            return that.MinScale;
        }
        private void set_7_SuperImageSource_MinScale(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            that.MinScale = (global::System.Int32)Value;
        }
        private object get_8_SuperImageSource_MaxScale(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            return that.MaxScale;
        }
        private void set_8_SuperImageSource_MaxScale(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            that.MaxScale = (global::System.Int32)Value;
        }
        private object get_9_SuperImageSource_Source(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            return that.Source;
        }
        private void set_9_SuperImageSource_Source(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            that.Source = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_10_SuperImageSource_IsDefault(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            return that.IsDefault;
        }
        private void set_10_SuperImageSource_IsDefault(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImageSource)instance;
            that.IsDefault = (global::System.Boolean)Value;
        }
        private object get_11_SuperImage_PlaceholderOpacity(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.PlaceholderOpacity;
        }
        private void set_11_SuperImage_PlaceholderOpacity(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.PlaceholderOpacity = (global::System.Double)Value;
        }
        private object get_12_SuperImage_PlaceholderBackground(object instance)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            return that.PlaceholderBackground;
        }
        private void set_12_SuperImage_PlaceholderBackground(object instance, object Value)
        {
            var that = (global::Coding4Fun.Toolkit.Controls.SuperImage)instance;
            that.PlaceholderBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_13_EventDetailsPage_ViewModel(object instance)
        {
            var that = (global::TechReady.Views.EventDetailsPage)instance;
            return that.ViewModel;
        }
        private object get_14_EventsFilterdPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.EventsFilterdPage)instance;
            return that.NavigationHelper;
        }
        private object get_15_EventsFilterdPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.EventsFilterdPage)instance;
            return that.DefaultViewModel;
        }
        private object get_16_FilterSpeakersPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.FilterSpeakersPage)instance;
            return that.NavigationHelper;
        }
        private object get_17_FilterSpeakersPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.FilterSpeakersPage)instance;
            return that.DefaultViewModel;
        }
        private object get_18_EventResultItemTemplateSelector_SmallItemTemplate(object instance)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector)instance;
            return that.SmallItemTemplate;
        }
        private void set_18_EventResultItemTemplateSelector_SmallItemTemplate(object instance, object Value)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector)instance;
            that.SmallItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_19_EventResultItemTemplateSelector_SmallLoadMoreTemplate(object instance)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector)instance;
            return that.SmallLoadMoreTemplate;
        }
        private void set_19_EventResultItemTemplateSelector_SmallLoadMoreTemplate(object instance, object Value)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector)instance;
            that.SmallLoadMoreTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_20_LearningResourceResultItemTemplateSelector_SmallItemTemplate(object instance)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector)instance;
            return that.SmallItemTemplate;
        }
        private void set_20_LearningResourceResultItemTemplateSelector_SmallItemTemplate(object instance, object Value)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector)instance;
            that.SmallItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_21_LearningResourceResultItemTemplateSelector_SmallLoadMoreTemplate(object instance)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector)instance;
            return that.SmallLoadMoreTemplate;
        }
        private void set_21_LearningResourceResultItemTemplateSelector_SmallLoadMoreTemplate(object instance, object Value)
        {
            var that = (global::TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector)instance;
            that.SmallLoadMoreTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_22_HubPage_ViewModel(object instance)
        {
            var that = (global::TechReady.Views.HubPage)instance;
            return that.ViewModel;
        }
        private object get_23_LearningResourcesFilteredPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.LearningResourcesFilteredPage)instance;
            return that.NavigationHelper;
        }
        private object get_24_LearningResourcesFilteredPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.LearningResourcesFilteredPage)instance;
            return that.DefaultViewModel;
        }
        private object get_25_LoginPage_ViewModel(object instance)
        {
            var that = (global::TechReady.Views.LoginPage)instance;
            return that.ViewModel;
        }
        private object get_26_SettingsPage_ViewModel(object instance)
        {
            var that = (global::TechReady.Views.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_27_SpeakerDetailsPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.SpeakerDetailsPage)instance;
            return that.NavigationHelper;
        }
        private object get_28_SpeakerDetailsPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.SpeakerDetailsPage)instance;
            return that.DefaultViewModel;
        }
        private object get_29_SpeakerDetailsPage_PivotSelectedIndex(object instance)
        {
            var that = (global::TechReady.Views.SpeakerDetailsPage)instance;
            return that.PivotSelectedIndex;
        }
        private void set_29_SpeakerDetailsPage_PivotSelectedIndex(object instance, object Value)
        {
            var that = (global::TechReady.Views.SpeakerDetailsPage)instance;
            that.PivotSelectedIndex = (global::System.Int32)Value;
        }
        private object get_30_WatchedVideosListPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.WatchedVideosListPage)instance;
            return that.NavigationHelper;
        }
        private object get_31_WatchedVideosListPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.WatchedVideosListPage)instance;
            return that.DefaultViewModel;
        }
        private object get_32_SpeakersListPage_NavigationHelper(object instance)
        {
            var that = (global::TechReady.Views.SpeakersListPage)instance;
            return that.NavigationHelper;
        }
        private object get_33_SpeakersListPage_DefaultViewModel(object instance)
        {
            var that = (global::TechReady.Views.SpeakersListPage)instance;
            return that.DefaultViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::TechReady.TechReady_XamlTypeInfo.XamlMember xamlMember = null;
            global::TechReady.TechReady_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "TechReady.Views.BrowseEventsPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.BrowseEventsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_0_BrowseEventsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.BrowseEventsPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.BrowseEventsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_1_BrowseEventsPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.PlaceholderImageSource":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "PlaceholderImageSource", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SuperImage_PlaceholderImageSource;
                xamlMember.Setter = set_2_SuperImage_PlaceholderImageSource;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.Source":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "Source", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SuperImage_Source;
                xamlMember.Setter = set_3_SuperImage_Source;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.Stretch":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "Stretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SuperImage_Stretch;
                xamlMember.Setter = set_4_SuperImage_Stretch;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.PlaceholderImageStretch":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "PlaceholderImageStretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SuperImage_PlaceholderImageStretch;
                xamlMember.Setter = set_5_SuperImage_PlaceholderImageStretch;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.Sources":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "Sources", "System.Collections.ObjectModel.ObservableCollection`1<Coding4Fun.Toolkit.Controls.SuperImageSource>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SuperImage_Sources;
                xamlMember.Setter = set_6_SuperImage_Sources;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImageSource.MinScale":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImageSource");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "MinScale", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SuperImageSource_MinScale;
                xamlMember.Setter = set_7_SuperImageSource_MinScale;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImageSource.MaxScale":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImageSource");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "MaxScale", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SuperImageSource_MaxScale;
                xamlMember.Setter = set_8_SuperImageSource_MaxScale;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImageSource.Source":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImageSource");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "Source", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SuperImageSource_Source;
                xamlMember.Setter = set_9_SuperImageSource_Source;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImageSource.IsDefault":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImageSource");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "IsDefault", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SuperImageSource_IsDefault;
                xamlMember.Setter = set_10_SuperImageSource_IsDefault;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.PlaceholderOpacity":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "PlaceholderOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SuperImage_PlaceholderOpacity;
                xamlMember.Setter = set_11_SuperImage_PlaceholderOpacity;
                break;
            case "Coding4Fun.Toolkit.Controls.SuperImage.PlaceholderBackground":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Coding4Fun.Toolkit.Controls.SuperImage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "PlaceholderBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SuperImage_PlaceholderBackground;
                xamlMember.Setter = set_12_SuperImage_PlaceholderBackground;
                break;
            case "TechReady.Views.EventDetailsPage.ViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.EventDetailsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "ViewModel", "TechReady.ViewModels.EventDetailsPageViewModel");
                xamlMember.Getter = get_13_EventDetailsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.EventsFilterdPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.EventsFilterdPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_14_EventsFilterdPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.EventsFilterdPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.EventsFilterdPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_15_EventsFilterdPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.FilterSpeakersPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.FilterSpeakersPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_16_FilterSpeakersPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.FilterSpeakersPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.FilterSpeakersPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_17_FilterSpeakersPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector.SmallItemTemplate":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "SmallItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_18_EventResultItemTemplateSelector_SmallItemTemplate;
                xamlMember.Setter = set_18_EventResultItemTemplateSelector_SmallItemTemplate;
                break;
            case "TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector.SmallLoadMoreTemplate":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Helpers.DataTemplateSelectors.EventResultItemTemplateSelector");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "SmallLoadMoreTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_19_EventResultItemTemplateSelector_SmallLoadMoreTemplate;
                xamlMember.Setter = set_19_EventResultItemTemplateSelector_SmallLoadMoreTemplate;
                break;
            case "TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector.SmallItemTemplate":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "SmallItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_20_LearningResourceResultItemTemplateSelector_SmallItemTemplate;
                xamlMember.Setter = set_20_LearningResourceResultItemTemplateSelector_SmallItemTemplate;
                break;
            case "TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector.SmallLoadMoreTemplate":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Helpers.DataTemplateSelectors.LearningResourceResultItemTemplateSelector");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "SmallLoadMoreTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_21_LearningResourceResultItemTemplateSelector_SmallLoadMoreTemplate;
                xamlMember.Setter = set_21_LearningResourceResultItemTemplateSelector_SmallLoadMoreTemplate;
                break;
            case "TechReady.Views.HubPage.ViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.HubPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "ViewModel", "TechReady.ViewModels.HubPageViewModel");
                xamlMember.Getter = get_22_HubPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.LearningResourcesFilteredPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.LearningResourcesFilteredPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_23_LearningResourcesFilteredPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.LearningResourcesFilteredPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.LearningResourcesFilteredPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_24_LearningResourcesFilteredPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.LoginPage.ViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.LoginPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "ViewModel", "TechReady.ViewModels.LoginPageViewModel");
                xamlMember.Getter = get_25_LoginPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SettingsPage.ViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SettingsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "ViewModel", "TechReady.ViewModels.SettingsPageViewModel");
                xamlMember.Getter = get_26_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SpeakerDetailsPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SpeakerDetailsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_27_SpeakerDetailsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SpeakerDetailsPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SpeakerDetailsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_28_SpeakerDetailsPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SpeakerDetailsPage.PivotSelectedIndex":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SpeakerDetailsPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "PivotSelectedIndex", "Int32");
                xamlMember.Getter = get_29_SpeakerDetailsPage_PivotSelectedIndex;
                xamlMember.Setter = set_29_SpeakerDetailsPage_PivotSelectedIndex;
                break;
            case "TechReady.Views.WatchedVideosListPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.WatchedVideosListPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_30_WatchedVideosListPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.WatchedVideosListPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.WatchedVideosListPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_31_WatchedVideosListPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SpeakersListPage.NavigationHelper":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SpeakersListPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "NavigationHelper", "TechReady.Common.NavigationHelper");
                xamlMember.Getter = get_32_SpeakersListPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "TechReady.Views.SpeakersListPage.DefaultViewModel":
                userType = (global::TechReady.TechReady_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TechReady.Views.SpeakersListPage");
                xamlMember = new global::TechReady.TechReady_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "TechReady.Common.ObservableDictionary");
                xamlMember.Getter = get_33_SpeakersListPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::TechReady.TechReady_XamlTypeInfo.XamlSystemBaseType
    {
        global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::TechReady.TechReady_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


